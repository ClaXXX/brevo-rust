/*
 * Brevo API
 *
 * Brevo provide a RESTFul API that can be used with any languages. With this API, you will be able to :   - Manage your campaigns and get the statistics   - Manage your contacts   - Send transactional Emails and SMS   - and much more...  You can download our wrappers at https://github.com/orgs/brevo  **Possible responses**   | Code | Message |   | :-------------: | ------------- |   | 200  | OK. Successful Request  |   | 201  | OK. Successful Creation |   | 202  | OK. Request accepted |   | 204  | OK. Successful Update/Deletion  |   | 400  | Error. Bad Request  |   | 401  | Error. Authentication Needed  |   | 402  | Error. Not enough credit, plan upgrade needed  |   | 403  | Error. Permission denied  |   | 404  | Error. Object does not exist |   | 405  | Error. Method not allowed  |   | 406  | Error. Not Acceptable  |   | 422  | Error. Unprocessable Entity |
 *
 * The version of the OpenAPI document: 3.0.0
 * Contact: contact@brevo.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetWhatsAppConfig {
    /// Id of the WhatsApp business account
    #[serde(
        rename = "whatsappBusinessAccountId",
        skip_serializing_if = "Option::is_none"
    )]
    pub whatsapp_business_account_id: Option<String>,
    /// Sending limit Information of the WhatsApp API account
    #[serde(rename = "sendingLimit", skip_serializing_if = "Option::is_none")]
    pub sending_limit: Option<String>,
    /// Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**
    #[serde(rename = "phoneNumberQuality", skip_serializing_if = "Option::is_none")]
    pub phone_number_quality: Option<PhoneNumberQuality>,
    /// Status information related to WhatsApp API account
    #[serde(
        rename = "whatsappBusinessAccountStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub whatsapp_business_account_status: Option<WhatsappBusinessAccountStatus>,
    /// Verification status information of the Business account
    #[serde(rename = "businessStatus", skip_serializing_if = "Option::is_none")]
    pub business_status: Option<String>,
    /// Status of the name associated with WhatsApp Phone number
    #[serde(
        rename = "phoneNumberNameStatus",
        skip_serializing_if = "Option::is_none"
    )]
    pub phone_number_name_status: Option<PhoneNumberNameStatus>,
}

impl GetWhatsAppConfig {
    pub fn new() -> GetWhatsAppConfig {
        GetWhatsAppConfig {
            whatsapp_business_account_id: None,
            sending_limit: None,
            phone_number_quality: None,
            whatsapp_business_account_status: None,
            business_status: None,
            phone_number_name_status: None,
        }
    }
}
/// Quality status of phone number associated with WhatsApp account. There are three quality ratings. example - **High (GREEN) , Medium (YELLOW) and Low(RED)**
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PhoneNumberQuality {
    #[serde(rename = "GREEN")]
    Green,
    #[serde(rename = "YELLOW")]
    Yellow,
    #[serde(rename = "RED")]
    Red,
}

impl Default for PhoneNumberQuality {
    fn default() -> PhoneNumberQuality {
        Self::Green
    }
}
/// Status information related to WhatsApp API account
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum WhatsappBusinessAccountStatus {
    #[serde(rename = "APPROVED")]
    Approved,
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "REJECTED")]
    Rejected,
}

impl Default for WhatsappBusinessAccountStatus {
    fn default() -> WhatsappBusinessAccountStatus {
        Self::Approved
    }
}
/// Status of the name associated with WhatsApp Phone number
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum PhoneNumberNameStatus {
    #[serde(rename = "APPROVED")]
    Approved,
    #[serde(rename = "PENDING")]
    Pending,
    #[serde(rename = "REJECTED")]
    Rejected,
}

impl Default for PhoneNumberNameStatus {
    fn default() -> PhoneNumberNameStatus {
        Self::Approved
    }
}
